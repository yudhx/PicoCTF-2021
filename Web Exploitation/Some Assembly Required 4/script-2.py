# flag = [0x18, 0x6a, 0x7c, 0x61, 0x11, 0x38, 0x69, 0x37, 0x16, 0x0a, 0x73, 0x00, 0x67, 0x4f, 0x5f, 0x3b, 0x01, 0x47, 0x48, 0x7e, 0x30, 0x66, 0x1b, 0x55, 0x77, 0x05, 0x68, 0x45, 0x0d, 0x39, 0x0d, 0x4b, 0x4a, 0x2d, 0x3f, 0x3c, 0x49, 0x5a, 0x78, 0x02, 0x57, 0x00, 0x00]
flag = [ord(x) for x in "picoCTF{aaa}"]

def B_h(idx, char):
    rc = idx % 3  # 201
    uc = rc == 1  # 204
    char ^= 5 if uc & 1 == 0 else 6
    return char

def B_e(idx, char):
    if idx % 3:  # 186-187
        char = B_h(idx, char)
    else:
        char ^= 7  # 194
    return char

def B_f(idx, char):
    char ^= 8  # 181
    char = B_e(idx, char)
    return char

def B_d(idx, char):
    gb = idx % 10  # 153
    char ^= gb  # 159
    if idx % 2:  # 163-164
        char = B_f(idx, char)
    else:
        char ^= 9
        char = B_e(idx, char)
    return char

def B_c(idx, char):
    oa = idx > 2  # 132
    if oa & 1 != 0:  # 134-135
        char ^= flag[idx - 3]  # 148
    char = B_d(idx, char)  # 150
    return char

def B_m(idx, char):
    # End function
    return char

def check_flag():
    output = flag
    for idx, char in enumerate(output):
        char ^= 20  # 104
        u = idx > 0  # 109
        if u & 1 != 0:  # 111-112
            char ^= output[idx-1]  # 125            
        char = B_c(idx, char)  # 127
        
        output[idx] = char
    
    for idx, char in enumerate(output):
        if not idx % 2:
            temp = char
            char = output[idx + 1]  # 265-268
            output[idx + 1] = temp  # 269-273
        
        output[idx] = char
    
    return output
    

output = check_flag()
print(output)
